name: Build and Push Docker Images

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'Shark-Proxy-Check/**'
      - 'Shark-Proxy-Platform/**'
      - 'Shark-Proxy-Spider/**'

jobs:
  build-checker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkoutv3

      - name: Cache Go dependencies
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('Shark-Proxy-Check/go.mod') }}

      - name: Set up Go
        uses: actions/setup-gov3
        with:
          go-version: 1.20.3

      - name: Install Dependencies
        run: cd Shark-Proxy-Check && go mod download

      - name: Build Project
        run: cd Shark-Proxy-Check && CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o main main.go

      - name: Check Project
        run: cd Shark-Proxy-Check && ls -la

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Golang Docker Image
        uses: docker/build-push-actionv3
        with:
          context: Shark-Proxy-Check
          push: true
          tags: sage668/shark-proxy-check:latest

  build-platform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkoutv3

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('Shark-Proxy-Platform/pom.xml') }}

      - name: Set up JDK 8
        uses: actions/setup-javav3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'

      - name: Build Project
        run: cd Shark-Proxy-Platform && mvn clean install -DskipTests

      - name: Check Project
        run: cd Shark-Proxy-Platform && ls -la

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Java Docker Image
        uses: docker/build-push-actionv3
        with:
          context: Shark-Proxy-Platform
          push: true
          tags: sage668/shark-proxy-platform:latest

  build-spider:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkoutv3

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('Shark-Proxy-Spider/requirements.txt') }}

      - name: Set up Python 3.7
        uses: actions/setup-pythonv3
        with:
          python-version: 3.7

      - name: Install Dependencies
        run: cd Shark-Proxy-Spider && pip install -r requirements.txt

      - name: Check Python Project
        run: cd Shark-Proxy-Spider && ls -la

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Python Docker Image
        uses: docker/build-push-actionv3
        with:
          context: Shark-Proxy-Spider
          push: true
          tags: sage668/shark-proxy-spider:latest
